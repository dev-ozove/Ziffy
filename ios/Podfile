require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Enable modular headers globally for all pods to resolve Firebase module issues
use_modular_headers!

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Conditional framework linking (leave as-is if you need Flipper/other frameworks)
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'Zify' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Explicitly add Firebase pods with modular headers (if needed)
  pod 'Firebase/Auth'           # For FirebaseAuth
  pod 'Firebase/Firestore'      # For FirebaseFirestore
  pod 'Firebase/Core'           # For FirebaseCore (if using older Firebase versions)

  # Other pods
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end